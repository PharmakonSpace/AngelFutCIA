name: Run CIACAM

on:
  schedule:
    - cron: '45 3 * * 1-5'   # 09:15 AM IST
    - cron: '45 4 * * 1-5'   # 10:15 AM IST
    - cron: '45 5 * * 1-5'   # 11:15 AM IST
    - cron: '41 6 * * 1-5'   # 12:15 PM IST
    - cron: '45 7 * * 1-5'   # 01:15 PM IST
    - cron: '45 8 * * 1-5'   # 02:15 PM IST
    - cron: '41 9 * * 1-5'   # 03:15 PM IST
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Python 3.x
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # 3Ô∏è‚É£ Cache virtual environment
      - name: Cache virtual environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-py-${{ steps.setup-python.outputs.python-version }}-venv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-py-${{ steps.setup-python.outputs.python-version }}-venv-

      # 4Ô∏è‚É£ Set up virtual environment & upgrade pip
      - name: Set up virtual environment
        run: |
          if [ ! -d ".venv" ]; then
            python -m venv .venv
          fi
          .venv/bin/pip install --upgrade pip setuptools wheel

      # 5Ô∏è‚É£ Install dependencies (skip reinstall if already satisfied)
      - name: Install dependencies
        run: |
          echo "Installing/upgrading dependencies..."
          .venv/bin/pip install --upgrade -r requirements.txt

      # 6Ô∏è‚É£ Load environment variables
      - name: Load environment variables
        run: |
          echo "USER_NAME=${{ secrets.USER_NAME }}" >> $GITHUB_ENV
          echo "PWD=${{ secrets.PWD }}" >> $GITHUB_ENV
          echo "TOTP_SECRET=${{ secrets.TOTP_SECRET }}" >> $GITHUB_ENV
          echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV
          echo "TOKEN_MAP=${{ secrets.TOKEN_MAP }}" >> $GITHUB_ENV
          echo "FEED_TOKEN=${{ secrets.FEED_TOKEN }}" >> $GITHUB_ENV
          echo "SHEET_ID=${{ secrets.SHEET_ID }}" >> $GITHUB_ENV

      # 7Ô∏è‚É£ Debug environment
      - name: Debug environment & installed packages
        run: |
          env | grep -E 'USER_NAME|PWD|TOTP_SECRET|API_KEY|TOKEN_MAP|FEED_TOKEN|SHEET_ID'
          .venv/bin/pip list

      # 8Ô∏è‚É£ Run your script using virtual environment Python
      - name: Run AngelFut.py
        env:
          GOOGLE_SHEETS_CREDENTIALS: ${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}
        run: .venv/bin/python AngelFut.py

      # 9Ô∏è‚É£ Configure Git
      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      # üîü Commit & push generated files
      - name: Add, commit, and push files
        run: |
          git add -A
          git commit -m "Auto-commit CSV, TXT, JSON, and log files" || true
          git pull --rebase origin main || true
          git push origin main || true
